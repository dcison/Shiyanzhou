{"version":3,"sources":["page/login.js","component/count.js","component/table.js","page/form.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","emitEmptyName","userNameInput","focus","setState","userName","emitEmptyPass","userPassInput","usrPass","emitEmptyPassConfirm","userPassConfirm","confirmPass","onChangeForm","e","type","target","value","handleSendServer","_this$state","state","message","warning","fetch","method","headers","Content-Type","body","JSON","stringify","user","pass","then","res","json","data","code","error","sessionStorage","setItem","history","push","handleJudgeRegister","flag","arguments","length","undefined","showRegister","getItem","replace","_this2","_this$state2","suffixName","react_default","a","createElement","icon","onClick","suffixPass","suffixPassConfirm","className","input","placeholder","prefix","style","color","suffix","onChange","ref","node","es_button","Component","Count","getOtion","x","keys","mcount","gcount","lcount","forEach","item","parseFloat","toFixed","tooltip","trigger","calculable","xAxis","map","legend","yAxis","series","name","stack","Fragment","lib_default","option","height","width","React","Column","Table","ColumnGroup","SelfTable","formmatData","money","global","local","cTime","Date","getMonth","_data","maxLength","Math","max","globalCall","localCall","_time","i","start","end","completeMoney","handleCancel","showPic","handlePic","nTime","runtime","parseInt","day","floor","hour","minute","second","concat","time","b","globalStartTime","globalEndTime","globalTotalTime","localStartTime","localEndTime","localTotalTime","toLocaleString","table","title","username","phone","bordered","locale","emptyText","dataSource","dataIndex","key","sorter","handleSort","render","handleUtilTime","timeDiff","modal","visible","onOk","onCancel","okText","cancelText","count","Search","Input","Form","handleOk","currentRole","editPhone","success","editUser","searchData","handleEditUserList","editUserList","setMoney","userList","handleDeleteRole","handleLogout","removeItem","handleSetMoneny","currentMoney","editMoney","_this$state$currentMo","_message","handleUpload","file","ext","substring","lastIndexOf","toLowerCase","reader","FileReader","fileString","readAsText","onload","evt","result","parse","_unused","onlyData","tag","obj","handleSearchRecord","info","toConsumableArray","Set","userTable","role","assign","columns","button_group_default","size","handleEditMessage","popconfirm","onConfirm","premission","upload","beforeUpload","showUploadList","onSearch","enterButton","src_component_table","App","BrowserRouter","Route","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1eb0a8d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Input, Icon, Button,message } from 'antd';\nimport './login.css'\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userName: '',\n            usrPass: '',\n            confirmPass: '',\n            showRegister: false\n        };\n    }\n\n    componentDidMount() {\n        let data = sessionStorage.getItem('premission');\n        if (data && data.length > 0) {\n            this.props.history.replace('/form')            \n        }\n    }\n\n    emitEmptyName = () => {\n        this.userNameInput.focus();\n        this.setState({ userName: '' });\n    }\n\n    emitEmptyPass = () => {\n        this.userPassInput.focus();\n        this.setState({ usrPass: '' });\n    }\n\n    emitEmptyPassConfirm = () => {\n        this.userPassConfirm.focus();\n        this.setState({ confirmPass: '' });\n    }\n\n    onChangeForm = (e, type) => {\n        switch (type) {\n            case 'user':\n                this.setState({ userName: e.target.value });\n                break;\n            case 'pass':\n                this.setState({ usrPass: e.target.value });\n                break;\n            case 'passconfirm':\n                this.setState({ confirmPass: e.target.value });\n                break;\n            default:\n                return;\n        }\n    }\n\n    handleSendServer = (type) => { //'r'是注册，'l'是登陆\n        let {userName,usrPass,confirmPass} = this.state;\n        // 发起登陆请求\n        if (type === 'r') {\n            if (userName === '' || usrPass === '' || confirmPass === ''){\n                message.warning('请确认所有信息已填写',0.5);\n                return;\n            }\n            if (confirmPass !== usrPass) {\n                message.warning('两次密码不一致，请确认',0.5);\n                return;\n            }\n            // console.log(userName,usrPass,confirmPass)\n        }else {\n            if (userName === '' || usrPass === ''){\n                message.warning('请确认所有信息已填写',0.5);\n                return;\n            }\n        }\n        fetch('http://127.0.0.1:5001/login',{\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: userName,\n                pass: usrPass,\n                type: type\n            })\n        }).then(res => {\n            res.json().then(data => {\n                if (data.code !== 200) {\n                    message.error(data.message,0.5)\n                }else{\n                    sessionStorage.setItem('premission', JSON.stringify(data.data))\n                    this.props.history.push('/form')\n                }\n            })\n        })\n    }\n\n    handleJudgeRegister = (flag = false) => {\n        this.setState({\n            userName: '',\n            usrPass: '',\n            confirmPass: '',\n            showRegister: flag\n        })\n    }\n\n\n    render() {\n        const { userName, usrPass,confirmPass } = this.state;\n        const suffixName = userName ? <Icon type=\"close-circle\" onClick={this.emitEmptyName} /> : null;\n        const suffixPass = usrPass ? <Icon type=\"close-circle\" onClick={this.emitEmptyPass} /> : null;\n        const suffixPassConfirm = confirmPass ? <Icon type=\"close-circle\" onClick={this.emitEmptyPassConfirm} /> : null;\n\n        return (\n            <div className=\"login\">\n                <h2>电信计费与查询系统</h2>\n                <div className=\"loginForm\">\n                    <Input\n                        placeholder=\"请输入用户名\"\n                        prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        suffix={suffixName}\n                        value={userName}\n                        onChange={(e) => this.onChangeForm(e, 'user')}\n                        ref={node => this.userNameInput = node}\n                    />\n                    <Input\n                        placeholder=\"密码\"\n                        type=\"password\"\n                        prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                        suffix={suffixPass}\n                        value={usrPass}\n                        onChange={(e) => this.onChangeForm(e, 'pass')}\n                        ref={node => this.userPassInput = node}\n                    />\n                    {\n                        this.state.showRegister && <Input\n                            placeholder=\"确认密码\"\n                            type=\"password\"\n                            prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                            suffix={suffixPassConfirm}\n                            value={confirmPass}\n                            onChange={(e) => this.onChangeForm(e, 'passconfirm')}\n                            ref={node => this.userPassConfirm = node}\n                        />\n                    }\n                    {\n                        this.state.showRegister ? <div className=\"buttonGroup\">\n                            <Button type=\"primary\" onClick={() => this.handleJudgeRegister(false)}>返回登陆</Button>\n                            <Button onClick={() => this.handleSendServer('r')}>立即注册</Button>\n                        </div>\n                            : <div className=\"buttonGroup\">\n                                <Button type=\"primary\" onClick={() => this.handleSendServer('l')}>登陆</Button>\n                                <Button onClick={() => this.handleJudgeRegister(true)}>注册</Button>\n                            </div>\n                    }\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Login;","import React from 'react'\n\nimport ReactEcharts from 'echarts-for-react';\n\nclass Count extends React.Component {\n\n    getOtion = () => {\n        let x = Object.keys(this.props.mcount)\n        let gcount = [],mcount = [],lcount = [];\n        x.forEach( item=> {\n            gcount.push(parseFloat(this.props.gcount[item]).toFixed(2))\n            lcount.push(parseFloat(this.props.lcount[item]).toFixed(2))\n            mcount.push(parseFloat(this.props.mcount[item]).toFixed(2))\n        })\n        x = x.map(item => (\n            item + '月'\n        ))\n        return {\n            tooltip : {\n                trigger: 'axis'\n            },\n            calculable : true,\n            xAxis: {\n                type: 'category',\n                data: x,\n            },\n            legend: {\n                data: ['长途话费','本地话费','短信话费']\n            },\n            yAxis: {\n                type: 'value'\n            },\n            series: [\n                {\n                    name: '长途话费',\n                    stack: '总量',\n                    data: gcount,\n                    type: 'line'\n                },\n                {\n                    name: '本地话费',\n                    stack: '总量',\n                    data: lcount,\n                    type: 'line'\n                },\n                {\n                    name: '短信话费',\n                    stack: '总量',\n                    data: mcount,\n                    type: 'line'\n                }\n            ]\n        }\n    }\n\n    render() {\n        return <>\n            <ReactEcharts\n                option={this.getOtion()}\n                style={{ height: '400px', width: '500px' }}\n            />\n        </>\n    }\n}\nexport default Count;","import React from 'react'\nimport { Table, Button,Modal } from 'antd'\nimport './table.css'\nimport Count from './count'\nconst { Column, ColumnGroup } = Table;\nlet gcount = {} //只算近3个月的\nlet lcount = {}\nlet mcount = {}\nclass SelfTable extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            showPic: false\n        }\n    }\n\n    timeDiff(nTime) {\n        if (typeof nTime !== 'number') {\n            return '-'\n        }\n        let runtime = parseInt(nTime / 1000);\n        let day = Math.floor(runtime / 60 / 60 / 24);\n        runtime %= 86400;\n        let hour = Math.floor(runtime / 60 / 60);\n        runtime %= 3600;\n        let minute = Math.floor(runtime / 60);\n        runtime %= 60;\n        let second = runtime;\n        if (day > 0) {\n            return `${day}天${hour}小时${minute}分${second}秒`;\n        } else if (day === 0 && hour > 0) {\n            return `${hour}小时${minute}分${second}秒`;\n        } else if (day === 0 && hour === 0 && minute > 0) {\n            return `${minute}分${second}秒`;\n        } else if (day === 0 && hour === 0 && minute === 0 && second) {\n            return `${second}秒`;\n        }\n    }\n\n    completeMoney(time, money) {\n        if (Math.floor(time / 1000 / 60) === 0) { //小于1分钟,以1分钟算\n            return money\n        } else {\n            return money * Math.floor(time / 1000 / 60)\n        }\n    }\n\n    formmatData = (data, money) => {\n        if (JSON.stringify(data) === '{}') {\n            return []\n        }\n        if (!money) {\n            return []\n        }\n        let { global, local, message } = money;\n        let cTime = new Date().getMonth() + 1;\n        if (cTime === 2) { //如果当前是2月\n            gcount[1] = 0;\n            gcount[2] = 0;\n            gcount[12] = 0; //去年12月\n\n            lcount[1] = 0;\n            lcount[2] = 0;\n            lcount[12] = 0;\n\n\n            mcount[1] = 0;\n            mcount[2] = 0;\n            mcount[12] = 0;\n\n        } else if (cTime === 1) { //如果当前是1月\n            gcount[1] = 0;\n            gcount[12] = 0;\n            gcount[11] = 0;\n\n            lcount[1] = 0;\n            lcount[12] = 0;\n            lcount[11] = 0;\n\n            mcount[1] = 0;\n            mcount[12] = 0;\n            mcount[11] = 0;\n        } else {\n            gcount[cTime] = 0;\n            gcount[cTime - 1] = 0;\n            gcount[cTime - 2] = 0;\n\n            lcount[cTime] = 0;\n            lcount[cTime - 1] = 0;\n            lcount[cTime - 2] = 0;\n\n            mcount[cTime] = 0;\n            mcount[cTime - 1] = 0;\n            mcount[cTime - 2] = 0;\n        }\n        \n        let _data = [], maxLength = Math.max(data.globalCall.length, data.localCall.length, data.message.length);\n        let _time = null;\n        for (let i = 0; i < maxLength; i++) {\n            let item = {};\n            item['key'] = i;\n            item['globalStartTime'] = !data.globalCall[i] ? '-' : data.globalCall[i].start;\n            item['globalEndTime'] = !data.globalCall[i] ? '-' : data.globalCall[i].end;\n            item['globalTotalTime'] = !data.globalCall[i] ? '-' : data.globalCall[i].end - data.globalCall[i].start;\n            item['globalMoney'] = !data.globalCall[i] ? '-' : this.completeMoney(data.globalCall[i].end - data.globalCall[i].start, global) + '元'\n            item['localStartTime'] = !data.localCall[i] ? '-' : data.localCall[i].start;\n            item['localEndTime'] = !data.localCall[i] ? '-' : data.localCall[i].end;\n            item['localTotalTime'] = !data.localCall[i] ? '-' : data.localCall[i].end - data.localCall[i].start;\n            item['localMoney'] = !data.localCall[i] ? '-' : this.completeMoney(data.localCall[i].end - data.localCall[i].start, local) + '元'\n            item['message'] = !data.message[i] ? '-' : data.message[i]\n            item['messageMoney'] = !data.message[i] ? '-' : message + '元'\n            _data.push(item)\n            if (data.globalCall[i]) {\n                _time = new Date(data.globalCall[i].start)\n                if (gcount[_time.getMonth() + 1] !== null) {\n                    gcount[_time.getMonth() + 1] += this.completeMoney(data.globalCall[i].end - data.globalCall[i].start, global)\n                }\n            }\n\n            if (data.localCall[i]) {\n                _time = new Date(data.localCall[i].start)\n                if (lcount[_time.getMonth() + 1] !== null) {\n                    lcount[_time.getMonth() + 1] += this.completeMoney(data.localCall[i].end - data.localCall[i].start, local)\n                }\n            }\n\n            if (data.message[i]) {\n                _time = new Date(data.message[i])\n                mcount[_time.getMonth() + 1] += message;\n            }\n        }\n        return _data;\n    }\n\n    handleSort(a, b, type) {\n        switch (type) {\n            case 'globalStart':\n                return a.globalStartTime - b.globalStartTime;\n            case 'globalEnd':\n                return a.globalEndTime - b.globalEndTime;\n            case 'globalTotal':\n                return a.globalTotalTime - b.globalTotalTime;\n            case 'localStart':\n                return a.localStartTime - b.localStartTime;\n            case 'localEnd':\n                return a.localEndTime - b.localEndTime;\n            case 'localTotal':\n                return a.localTotalTime - b.localTotalTime;\n            case 'message':\n                return a.message - b.message\n            default:\n                return;\n        }\n    }\n\n    handleUtilTime(time) {\n        if (time === '-') {\n            return '-'\n        } else {\n            let _time = new Date(time);\n            return _time.toLocaleString()\n        }\n\n    }\n\n    handleCancel = () =>{\n        this.setState({\n           showPic : false\n        })\n    }\n    handlePic = () => {\n        this.setState({\n            showPic : true\n        })\n    }\n\n    render() {\n        let data = this.formmatData(this.props.data, this.props.money);\n        return (\n            <>\n                {\n                    (JSON.stringify(this.props.money) !== '{}' && this.props.money )&&\n                    <>\n                        <h3 className=\"totalMoneySetting\">\n                            当前费率： 长途{this.props.money.global}元/分 | 本地{this.props.money.local}元/分 |  短信{this.props.money.message}元/条\n                        <Button onClick={this.handlePic}>折线图</Button>\n                        </h3>\n                    </>\n                }\n                <Table\n                    title={() => {\n                        if (JSON.stringify(this.props.data) !== '{}') {\n                            return `用户：${this.props.data.username} 号码：${this.props.data.phone}`\n                        } else {\n                            return '暂无此用户'\n                        }\n                    }}\n                    className=\"selfTable\"\n                    bordered={true}\n                    locale={{\n                        emptyText: '暂无数据',\n                    }}\n                    dataSource={data}\n                >\n                    <ColumnGroup title=\"长途记录\">\n                        <Column\n                            title=\"起始时间\"\n                            dataIndex=\"globalStartTime\"\n                            key=\"globalStartTime\"\n                            sorter={(a, b) => this.handleSort(a, b, 'globalStart')}\n                            render={(value) => this.handleUtilTime(value)}\n                        />\n                        <Column\n                            title=\"结束时间\"\n                            dataIndex=\"globalEndTime\"\n                            key=\"globalEndTime\"\n                            sorter={(a, b) => this.handleSort(a, b, 'globalEnd')}\n                            render={(value) => this.handleUtilTime(value)}\n                        />\n                        <Column\n                            title=\"共计时间\"\n                            dataIndex=\"globalTotalTime\"\n                            key=\"globalTotalTime\"\n                            sorter={(a, b) => this.handleSort(a, b, 'globalTotal')}\n                            render={(value) => this.timeDiff(value)}\n                        />\n                        <Column\n                            title=\"费用\"\n                            dataIndex=\"globalMoney\"\n                            key=\"globalMoney\"\n                        />\n                    </ColumnGroup>\n\n\n                    <ColumnGroup title=\"本地记录\">\n                        <Column\n                            title=\"起始时间\"\n                            dataIndex=\"localStartTime\"\n                            key=\"localStartTime\"\n                            sorter={(a, b) => this.handleSort(a, b, 'localStart')}\n                            render={(value) => this.handleUtilTime(value)}\n                        />\n                        <Column\n                            title=\"结束时间\"\n                            dataIndex=\"localEndTime\"\n                            key=\"localEndTime\"\n                            render={(value) => this.handleUtilTime(value)}\n                            sorter={(a, b) => this.handleSort(a, b, 'localEnd')}\n                        />\n                        <Column\n                            title=\"共计时间\"\n                            dataIndex=\"localTotalTime\"\n                            render={(value) => this.timeDiff(value)}\n                            key=\"localTotalTime\"\n                            sorter={(a, b) => this.handleSort(a, b, 'localTotal')}\n                        />\n                        <Column\n                            title=\"费用\"\n                            dataIndex=\"localMoney\"\n                            key=\"localMoney\"\n                        />\n                    </ColumnGroup>\n\n                    <Column\n                        title=\"短信记录\"\n                        dataIndex=\"message\"\n                        key=\"message\"\n                        render={(value) => this.handleUtilTime(value)}\n                        sorter={(a, b) => this.handleSort(a, b, 'message')}\n                    />\n                    <Column\n                        title=\"费用\"\n                        dataIndex=\"messageMoney\"\n                        key=\"messageMoney\"\n                    />\n                </Table>\n\n\n                <Modal\n                    title=\"近三月费用折线图\"\n                    visible={this.state.showPic}\n                    onOk={this.handleCancel}\n                    onCancel={this.handleCancel}\n                    okText='确认'\n                    cancelText='关闭'\n                >\n                    <Count \n                        mcount={mcount}\n                        lcount={lcount}\n                        gcount={gcount}\n                    />\n                </Modal>\n            </>\n        )\n    }\n}\n\nexport default SelfTable;","import React from 'react'\nimport { Upload, Button, Modal, Input, message, Table, Popconfirm, Icon } from 'antd';\nimport SelfTable from '../component/table';\nimport './form.css'\nimport ButtonGroup from 'antd/lib/button/button-group';\nconst Search = Input.Search;\n\nclass Form extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: null,\n            currentRole: null,\n            userList: [],\n            editUser: false,\n            editUserList: false,\n            editPhone: '',\n            userTable: [],\n            setMoney: false,\n            currentMoney: {\n                global: 0,\n                local: 0,\n                message: 0\n            },\n            searchData: {}\n        }\n    }\n\n    handleOk = () => {\n        if (this.state.currentRole.phone === this.state.editPhone){\n            this.setState({\n                editUser: false\n            })\n            return;\n        }\n        fetch('http://127.0.0.1:5001/editUser', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                user: this.state.currentRole.user,\n                phone: this.state.editPhone\n            })\n        }).then(res => {\n            res.json().then(data => {\n                if (data.code === 200) {\n                    message.success('更新成功', 0.5)\n                    if (data.data.user === this.state.user.user) {\n                        sessionStorage.setItem('premission', JSON.stringify(data.data))\n                        this.setState({\n                            user: data.data,\n                            editUser: false,\n                            searchData: {}\n                        })\n                    } else {\n                        this.setState({\n                            editUser: false\n                        })\n                        this.handleEditUserList()\n                    }\n                } else {\n                    message.error(data.message, 0.5)\n                }\n            })\n        })\n    }\n\n    handleCancel = (e) => {\n        this.setState({\n            editUser: false,\n            editUserList: false,\n            setMoney: false\n        });\n    }\n\n\n    componentWillMount() {\n        let data = sessionStorage.getItem('premission');\n        if (data.length > 0) {\n            data = JSON.parse(data);\n            this.setState({\n                user: data\n            });\n        };\n\n    }\n\n    handleEditMessage(role) {\n        this.setState({\n            editUser: true,\n            editUserList: false,\n            currentRole: role,\n            editPhone: role.phone\n        })\n    }\n\n    onChangeForm(e, type) {\n        switch (type) {\n            case 'edit':\n                this.setState({\n                    editPhone: e.target.value\n                })\n                break;\n            case 'global':\n                this.setState({\n                    currentMoney: Object.assign(this.state.currentMoney, { global: e.target.value })\n                })\n                break;\n            case 'local':\n                this.setState({\n                    currentMoney: Object.assign(this.state.currentMoney, { local: e.target.value })\n                })\n                break;\n            case 'message':\n                this.setState({\n                    currentMoney: Object.assign(this.state.currentMoney, { message: e.target.value })\n                })\n                break;\n            default:\n                return;\n        }\n\n    }\n\n    handleEditUserList = () => {\n        fetch('http://127.0.0.1:5001/getUser').then(res => {\n            res.json().then(data => {\n                this.setState({\n                    editUserList: true,\n                    userList: data\n                })\n            })\n        })\n    }\n\n    handleDeleteRole = (value) => {\n        if (value.user === this.state.user.user) {\n            message.error('无法删除你自身账号', 0.5);\n        } else {\n            fetch('http://127.0.0.1:5001/deleteUser', {\n                method: 'DELETE',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({\n                    user: value.user\n                })\n            }).then(res => {\n                res.json().then(data => {\n                    if (data.code === 200) {\n                        this.handleEditUserList()\n                    }\n                })\n            })\n        }\n    }\n\n    handleLogout = () => {\n        sessionStorage.removeItem('premission')\n        this.props.history.replace('/')\n    }\n\n    handleSetMoneny = () => {\n        fetch('http://127.0.0.1:5001/getMoney').then(res => {\n            res.json().then(data => {\n                let _data = data.data\n                if (!_data) {\n                    _data = {\n                        global: 0,\n                        local: 0,\n                        message: 0\n                    }\n                }\n\n                this.setState({\n                    setMoney: true,\n                    currentMoney: _data\n                })\n            })\n        })\n    }\n\n    editMoney = () => {\n        let { global, local } = this.state.currentMoney;\n        let _message = this.state.currentMoney.message;\n        fetch('http://127.0.0.1:5001/setMoney', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                global: global * 1,\n                local: local * 1,\n                message: _message * 1\n            })\n        }).then(res => {\n            res.json().then(data => {\n                if (data.code === 200) {\n                    message.success('话费设定成功', 0.5)\n                    this.setState({\n                        setMoney: false\n                    })\n                }\n            })\n        })\n\n    }\n\n    handleUpload = (file) => {\n        let ext = file.name.substring(file.name.lastIndexOf('.') + 1);\n        if (ext.toLowerCase() === 'json' || ext.toLowerCase() === 'txt') {\n            let reader = new FileReader(), fileString = '';\n            reader.readAsText(file, \"UTF-8\");//读取文件 \n            reader.onload = function (evt) { //读取完文件之后会回来这里\n                fileString = evt.target.result; // 读取文件内容\n                try {\n                    JSON.parse(fileString);\n                    fetch('http://127.0.0.1:5001/upload', {\n                        method: 'POST',\n                        headers: {\n                            'Content-Type': 'application/json'\n                        },\n                        body: fileString\n                    }).then(res => {\n                        res.json().then(data => {\n                            if (data.code === 200) {\n                                message.success('上传成功', 0.5)\n                            }\n                        })\n                    })\n                } catch {\n                    message.error('请确保JSON格式正确', 0.5)\n                }\n            }\n        } else {\n            message.error('请上传JSON或TXT文本文件', 0.5)\n        }\n        return false;\n    }\n\n    onlyData = (value) => {\n        let tag = '', result = [], obj = {};\n        for (let i = 0; i < value.length; i++) {\n            tag = value[i].start + '' + value[i].end;\n            if (!obj[tag]) {\n                result.push(value[i]);\n                obj[tag] = true;\n            }\n        }\n        return result\n    }\n\n\n    handleSearchRecord = (value) => {\n        let _data = null;\n        fetch('http://127.0.0.1:5001/getMoney').then(res => {\n            res.json().then(data => {\n                _data = data.data\n                if (!_data) {\n                    _data = {\n                        global: 0,\n                        local: 0,\n                        message: 0\n                    }\n                }\n                fetch(`http://127.0.0.1:5001/record?number=${value}`).then(res => {\n                    res.json().then(data => {\n                        if (data.code === 200) {\n                            if (data.data && data.data.length === 0) {\n                                message.info('暂无通信记录')\n                                this.setState({\n                                    searchData: {}\n                                })\n                            } else {\n                                let onlyData = data.data;\n                                onlyData.globalCall = this.onlyData(onlyData.globalCall)\n                                onlyData.localCall = this.onlyData(onlyData.localCall)\n                                onlyData.message = [...new Set(onlyData.message)]\n                                this.setState({\n                                    searchData: data.data,\n                                    currentMoney: _data\n                                })\n                            }\n                        } else {\n                            message.error('查询出错')\n                        }\n                    })\n                })\n            })\n        })\n\n    }\n\n    render() {\n        const columns = [{\n            title: '账户名',\n            dataIndex: 'user',\n            key: 'user',\n        }, {\n            title: '手机号',\n            dataIndex: 'phone',\n            key: 'phone',\n        }, {\n            title: '权限',\n            dataIndex: 'premission',\n            key: 'premission',\n        }, {\n            title: '管理',\n            key: 'action',\n            render: (value) => {\n                return <ButtonGroup>\n                    <Button size=\"small\" onClick={() => this.handleEditMessage(value)}>编辑</Button>\n                    <Popconfirm title=\"确定删除吗？\" okText=\"确定\" cancelText=\"取消\" onConfirm={() => this.handleDeleteRole(value)}>\n                        <Button size=\"small\" type=\"danger\">删除</Button>\n                    </Popconfirm>\n                </ButtonGroup>\n            },\n        }];\n\n\n        return (\n            <div className=\"formWrap\">\n                <div className=\"header\">\n                    <h1>欢迎使用电信计费与查询系统</h1>\n                    <ButtonGroup>\n                        <Button type=\"primary\" onClick={() => this.handleEditMessage(this.state.user)}>本账户信息编辑</Button>\n                        <Button onClick={() => this.handleLogout()}>登出</Button>\n                    </ButtonGroup>\n\n                </div>\n                <hr />\n                {\n                    (this.state.user !== null && this.state.user.premission === 'admin') ? <div className=\"buttonGroup\">\n                        <Button type='primary' onClick={this.handleSetMoneny}>费率设定</Button>\n                        <Button type=\"primary\" onClick={this.handleEditUserList}>用户管理</Button>\n                        <Upload\n                            beforeUpload={(file) => this.handleUpload(file)}\n                            showUploadList={false}\n                        >\n                            <Button type=\"primary\">\n                                <Icon type=\"upload\" /> 话单上传\n                            </Button>\n                        </Upload>\n                    </div> : null\n                }\n\n                <div>\n                    {\n                        this.state.user.premission === 'admin' ? <Search\n                            placeholder=\"请输入要查询的电话号码\"\n                            onSearch={value => this.handleSearchRecord(value)}\n                            size=\"large\"\n                            enterButton\n                            type=\"number\"\n                        /> : <Button onClick={() => this.handleSearchRecord(this.state.user.phone)}>查询本人账单</Button>\n                    }\n                    {\n                        JSON.stringify(this.state.searchData) !== '{}' &&\n                        <SelfTable\n                            data={this.state.searchData}\n                            money={this.state.currentMoney}\n                        />\n                    }\n\n                </div>\n\n                {/* 下面是隐藏的编辑弹窗 */}\n                <Modal\n                    title=\"本人信息编辑\"\n                    visible={this.state.editUser}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    okText=\"确认\"\n                    cancelText=\"关闭\"\n                >\n                    {\n                        this.state.currentRole && <>\n                            <p>\n                                账户名称: {this.state.currentRole.user}\n                            </p>\n                            <p>\n                                您的权限: {this.state.currentRole.premission === 'admin' ? '管理员' : '普通用户'}\n                            </p>\n                            <p className=\"inputGroup\">\n                                <span>您的电话: </span>\n                                <Input value={this.state.editPhone} onChange={(e) => this.onChangeForm(e, 'edit')} />\n                            </p>\n                        </>}\n                </Modal>\n\n\n                <Modal\n                    title=\"用户信息管理\"\n                    visible={this.state.editUserList}\n                    onOk={this.handleCancel}\n                    onCancel={this.handleCancel}\n                    okText=\"确认\"\n                    cancelText=\"关闭\"\n                >\n                    <Table dataSource={this.state.userList} columns={columns} />\n                </Modal>\n\n\n                {this.state.currentMoney && <Modal\n                    title=\"费率设定\"\n                    visible={this.state.setMoney}\n                    onOk={this.editMoney}\n                    onCancel={this.handleCancel}\n                    okText=\"确认\"\n                    cancelText=\"关闭\"\n                >\n                    <div className=\"setMoney\">\n                        <p className=\"inputGroup\">\n                            <span>长途话费: </span>\n                            <Input type=\"number\" value={this.state.currentMoney.global} onChange={(e) => this.onChangeForm(e, 'global')} />\n                        </p>\n                        <p className=\"inputGroup\">\n                            <span>本地话费: </span>\n                            <Input type=\"number\" value={this.state.currentMoney.local} onChange={(e) => this.onChangeForm(e, 'local')} />\n                        </p>\n                        <p className=\"inputGroup\">\n                            <span>短信话费: </span>\n                            <Input type=\"number\" value={this.state.currentMoney.message} onChange={(e) => this.onChangeForm(e, 'message')} />\n                        </p>\n                    </div>\n\n                </Modal>}\n\n\n            </div>\n        )\n    }\n}\n\nexport default Form;","import React, { Component } from 'react';\nimport {BrowserRouter,Route} from 'react-router-dom'\nimport Login from './page/login';\nimport Form from './page/form'\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter >\n          <>\n          <Route exact path='/' component={Login}></Route>\n          <Route path='/form' component={Form}></Route>\n          </>\n        </BrowserRouter>\n        {/* <Login /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}